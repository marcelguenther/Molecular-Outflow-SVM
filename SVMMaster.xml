<?xml version="1.0" encoding="utf-8"?>
<ExpFiles>

	<!-- ****************************************************************************************** -->
	<!-- Relevant Flags -->
	<flags>
		<!-- Use a mask to calculate accuracy scores -->
		<!-- In case no mask files are provided, the flag will be turned to False,if MASK is false,the cube will be zoomed until the smallest number of nans are there a 3 Sigma Filter is applied on the predict and also nan values are the same as the original cube -->
		<MASK>False</MASK>

		<!-- Create a new set of FV, always True -->
		<!-- If False and a cube from the database doesn't have a matching FV file, a new one will be created-->
		<CREATE_FV>True</CREATE_FV>

		<!-- Train a new SVM, requires MASK to be True -->
		<!-- If False and there is no SVM or it's invalid, an error will be raised -->
		<TRAIN_SVM>False</TRAIN_SVM>

		<!-- Use the halving algorithm to determine the best gamma and C combinations (for the 1st cube) -->
		<!-- If False, they will be determined by a grid search -->
		<!-- If you want to give gamma or C values, set the number parameters to 0 or 1 -->
		<HALV>False</HALV>

		<!-- Plot the classic/halv grid-search raster -->
		<!-- Requires the algorithm to train an SVM and do a grid search -->
		<!-- 'iter' notes for halving grid search are not included -->
		<Plot_GS>False</Plot_GS>

		<!-- Plot the SVM prediction distribution of the features -->
		<!-- Assuming a normal distribution of the features vectors -->
		<!-- Requires the SVM to be trained (TRAIN_SVM == True) -->
		<Grid_SVM>False</Grid_SVM>

		<!-- Create fits cubes to compare the results easier with the input data, always true -->
		<create_fits>True</create_fits>

		<!-- Plots to analyse the feature distribution -->
		<!-- If MASK is True, also plots input and True/False prediction distribution -->
		<CHECK_FV>False</CHECK_FV>

		<!-- Plots to analyze the 2D feature distribution -->
		<!-- If MASK is True, also plots input and True/False prediction distribution -->
		<CHECK_FV2D>False</CHECK_FV2D>

		<!-- Plots to analyse the feature importance -->
		<!-- Requires MASK to be True -->
		<CHECK_FI>False</CHECK_FI>

		<!-- Plots to display the confusion matrix -->
		<!-- Requires MASK to be True -->
		<Plot_CM>False</Plot_CM>

		<!-- Greate cubes to analyse the features of the FV -->
		<FV_CUBES>False</FV_CUBES>

		<!-- Fix the random seed (doesn't work)-->
		<FixRandom>False</FixRandom>

		<!-- Calculate database statistic, requires MASK to be True -->
		<DatabaseStatistic>False</DatabaseStatistic>

		<!-- Generate simple score vs (metric) parameter plots, requires MASK to be True -->
		<DatabaseAutomatic>False</DatabaseAutomatic>

		<!-- Generate more complex score vs main parameter plots containing several sub-datasets -->
		<!-- Requires manual input and MASK to be True -->
		<DatabaseManual>False</DatabaseManual>

		<!-- Remove all unnecessary files/directories -->
		<ProductionRun>True</ProductionRun>

		<!-- Generates the plots in 90% Din A4 size, ergo maximal 18.9*26.73 cm or 7.47*10.53 in -->
		<ThesisMode>False</ThesisMode>
	</flags>


	<!-- ****************************************************************************************** -->
	<!-- Name of the Local Machine -->
	<namelocal>LocalName</namelocal>


	<!-- ****************************************************************************************** -->
	<!-- Give Relevant Paths Servers -->
	<pathsserver>
		<!-- Root in wich all files/directories will be stored -->
		<SavePath>/scratch/guenther/DMOSVM/</SavePath>

		<!-- Directory from which most files will be read out -->
		<ReadPath>/home/guenther/projects/ALMAGAL/</ReadPath>

		<!-- Directory to the database(s) -->
		<DatabasePath>/home/guenther/projects/ALMAGAL/</DatabasePath>

		<!-- Directory containing the FV files in case one wants to read them out -->
		<Read_FV_Path>/FVPath/</Read_FV_Path>

		<!-- Directory containing the trained SVM -->
		<Read_SVM_Path>home/guenther/projects/ALMAGAL/</Read_SVM_Path>
	</pathsserver>

	<!-- Give Relevant Paths Local Machine -->
	<pathslocal>
		<!-- Root in wich all files/directories will be stored -->
		<SavePath>/SavePath/</SavePath>

		<!-- Directory from which most files will be read out -->
		<ReadPath>/ReadPath/</ReadPath>

		<!-- Directory to the database(s) -->
		<DatabasePath>/DatabasePath/</DatabasePath>

		<!-- Directory containing the FV files in case one wants to read them out -->
		<Read_FV_Path>/FVPath/</Read_FV_Path>

		<!-- Directory containing the trained SVM -->
		<Read_SVM_Path>/SVMPath/</Read_SVM_Path>
	</pathslocal>


	<!-- ****************************************************************************************** -->
	<!-- Give Relevant Files on the Servers -->
	<filesserver>
		<!-- File of the database -->
		<database_file>SVM-Cubes.csv</database_file>

		<!-- Name of the support vector machine, in case it's read in -->
		<SVM_file>Outflow_SVM.pkl</SVM_file>
	</filesserver>

	<!-- Give Relevant Files on a Local Machine -->
	<fileslocal>
		<!-- File of the database -->
		<database_file>Database.csv</database_file>

		<!-- Name of the support vector machine, in case it's read in -->
		<SVM_file>SVMname</SVM_file>
	</fileslocal>


	<!-- ****************************************************************************************** -->
	<!-- Give Relevant Parameters -->
	<parameters>
		<!-- Number of used processes for parallelisation, max 90% of computer cores -->
		<npro>40</npro>

		<!-- Minimal subcube spatial extent in times of the beam size -->
		<SigmaSC>2</SigmaSC>

		<!-- Minimal subcube velocity extent in km/s -->
		<VelocitySC>25</VelocitySC>

		<!-- The used kernel, rbg (recommended) or linear -->
		<kernel>linear</kernel>

		<!-- Sigma level to remove the noise, set it to None to ignore the sigma level -->
		<SigmaLevel>None</SigmaLevel>

		<!-- Fraction of training data of each cube -->
		<train_size>0.99</train_size>

		<!-- Grid search scoring method -->
		<!-- Valid are all possible sklearn metrics -->
		<!-- and TPR (for true positive rate) or TNR (for true negative rate) -->
		<grid_scoring>TPPNR</grid_scoring>

		<!-- Spacing of gamma grid -->
		<!-- Valid are linear and log -->
		<gammaspacing>log</gammaspacing>

		<!-- Number of gamma points -->
		<gamman>21</gamman>

		<!-- Minimal gamma value -->
		<gammamin>1e-05</gammamin>
		<!--<gammamin>1</gammamin>-->

		<!-- Maximal gamma value -->
		<gammamax>1e+01</gammamax>
		<!--<gammamax>1</gammamax>-->

		<!-- Spacing of c grid -->
		<!-- Valid are linear and log -->
		<cspacing>log</cspacing>

		<!-- Number of c points -->
		<cn>21</cn>

		<!-- Minimal c value -->
		<cmin>1e-02</cmin>

		<!-- Maximal c value -->
		<cmax>1e+04</cmax>

		<!-- Minimal percentage of a feature included in the feature distribution plots -->
		<fdmp>0.95</fdmp>

		<!-- Permutation importance scoring score -->
		<!-- Valid scores are the same as 'grid_scoring' -->
		<fi_scoring>balanced_accuracy</fi_scoring>
	</parameters>
</ExpFiles>
